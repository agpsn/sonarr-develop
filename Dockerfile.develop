FROM ghcr.io/agpsn/alpine-base:latest

#MAIN
ARG SVERSION
ARG SBRANCH="develop"

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

RUN set -xe && \
	echo "***** update system packages *****" apk upgrade --no-cache && \
	echo "***** install runtime packages *****" && apk add --update --no-cache xmlstarlet icu-libs && \
	echo "***** install sonarr *****" && if [ -z ${SVERSION+x} ]; then SVERSION=$(curl -sX GET http://services.sonarr.tv/v1/releases | jq -r "first(.[] | select(.branch==\"${SBRANCH}\") | .version)"); fi && mkdir -p "${APP_DIR}/sonarr/bin" && curl -o /tmp/sonarr.tar.gz -L "https://download.sonarr.tv/v4/${SBRANCH}/${SVERSION}/Sonarr.${SBRANCH}.${SVERSION}.linux-musl-x64.tar.gz" && tar xzf /tmp/sonarr.tar.gz -C "${APP_DIR}/sonarr/bin" --strip-components=1 && printf "UpdateMethod=docker\nBranch=${SBRANCH}\nPackageVersion=${SVERSION} [$SBRANCH]\nPackageAuthor=[agpsn](https://github.com/agpsn/sonarr-develop)\n" >"${APP_DIR}/sonarr/package_info" && \
	echo "***** cleanup *****" && rm -rf /tmp/* && \
	echo "***** setting version *****" && echo $SVERSION > "${APP_DIR}/sonarr/app_version"

# add local files
COPY root/ /

# healthcheck
HEALTHCHECK  --interval=30s --timeout=30s --start-period=10s --retries=5 CMD curl --fail http://localhost:8989 || exit 1

# label
LABEL org.opencontainers.image.source="https://github.com/agpsn/sonarr-develop"

# ports and volumes
EXPOSE 8989
VOLUME "${CONFIG_DIR}"
