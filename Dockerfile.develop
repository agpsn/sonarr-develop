FROM ghcr.io/agpsn/docker-base:alpine
 
#MAIN
ARG DVERSION
ARG DBRANCH="develop"
ARG DREPO="https://github.com/agpsn/sonarr-develop"

RUN set -xe && \
	echo "***** update system packages *****" apk upgrade --no-cache && \
	echo "***** install runtime packages *****" && apk add --no-cache xmlstarlet icu-libs && \
	echo "***** install sonarr *****" && if [ -z ${DVERSION+x} ]; then DVERSION=$(curl -sX GET http://services.sonarr.tv/v1/releases | jq -r "first(.[] | select(.branch==\"${DBRANCH}\") | .version)"); fi && mkdir -p "${APP_DIR}/sonarr/bin" && curl -o /tmp/sonarr.tar.gz -L "https://download.sonarr.tv/v4/${DBRANCH}/${DVERSION}/Sonarr.${DBRANCH}.${DVERSION}.linux-musl-x64.tar.gz" && tar xzf /tmp/sonarr.tar.gz -C "${APP_DIR}/sonarr/bin" --strip-components=1 && printf "UpdateMethod=docker\nBranch=${DBRANCH}\nPackageVersion=${DVERSION} [$DBRANCH]\nPackageAuthor=[agpsn]($DREPO)\n" >"${APP_DIR}/sonarr/package_info" && \
	echo "***** cleanup *****" && rm -rf /tmp/* && \
	echo "***** setting version *****" && echo $DVERSION > "${APP_DIR}/sonarr/app_version"

# add local files
COPY root/ /

# healthcheck
HEALTHCHECK  --interval=30s --timeout=30s --start-period=10s --retries=5 CMD curl --fail http://localhost:8989 || exit 1

# label
#LABEL org.opencontainers.image.source="https://github.com/agpsn/sonarr-develop"

# ports and volumes
EXPOSE 8989
VOLUME "${CONFIG_DIR}"
